name: Master Branch Push Create Release

on:
  push:
    branches:
      - master

jobs:
  MasterPushCreateRelease:

    runs-on: ubuntu-latest
    env: 
      MAJOR_VERSION: 0
      MINOR_VERSION: 0
      PATCH_VERSION: 0

    steps:

    - name: Generate build number
      uses: einaregilsson/build-number@v2
      with:
        token: ${{secrets.github_token}}

    - name: Echo new build number
      run: echo "Build number is $BUILD_NUMBER"

    - name: Run the actions/checkout lib v1
      uses: actions/checkout@v1

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Get application version (x.x.x)
      run: echo "::set-env name=MAJOR_VERSION::$(cat build.gradle | grep 'majorVersion = ' | awk '{print $3}')" &&
        echo "::set-env name=MINOR_VERSION::$(cat build.gradle | grep 'minorVersion = ' | awk '{print $3}')" &&
        echo "::set-env name=PATCH_VERSION::$(cat build.gradle | grep 'patchVersion = ' | awk '{print $3}')"

    - name: Set the four digit version
      run: echo "##[set-output name=version_build;]$MAJOR_VERSION.$MINOR_VERSION.$PATCH_VERSION.$BUILD_NUMBER"
      id: version_build_output
    
    - name: Echo the four digit version
      run: echo "Building application v${{ steps.version_build_output.outputs.version_build }}"
      
    - name: Set gradle version
      run: chmod +x gradlew && ./gradlew wrapper --gradle-version=6.0

    - name: Check gradle version
      run: ./gradlew --version

    - name: Build the Release
      run: ./gradlew assembleRelease

    - name: Run Unit Tests on Release
      run: ./gradlew testReleaseUnitTest

    - name: Ouput repository name without owner as variable
      run: echo "##[set-output name=repo_name;]${GITHUB_REPOSITORY#realwear/}"
      id: repo_name_output

    - name: Upload artifact
      uses: actions/upload-artifact@master
      with:
        name: ${{ steps.repo_name_output.outputs.repo_name }}
        path: sdk/build/outputs/aar
    
# ALL REMAINING STEPS ARE ONLY FOR CREATING AND POSTING THE RELEASE
    # echo build number as an output, not just a variable. 
    - name: Set the build number output
      run: echo "##[set-output name=build_number;]$BUILD_NUMBER"
      id: build_package_step

    - name: Set the commit sha output for usage by release creation
      run: echo "##[set-output name=commit_sha;]$GITHUB_SHA"
      id: commit_sha_step

    - name: Create Github Release
      uses: ./.github/release-action
      env:
       GITHUB_TOKEN: ${{ secrets.TOKEN }}
       GITHUB_REPOSITORY: ${{ github.repository }}
       APP_FOLDER: sdk
       BUILD_CONFIG: debug # For now. Will need to be 'release' after we sign the apks
       OUTPUT_TYPE: aar # Will be 'apk' for other projects
       RELEASE_TITLE: ${{ steps.repo_name_output.outputs.repo_name }}
       VERSION_NUMBER: ${{ steps.version_build_output.outputs.version_build }}
       BUILD_NUMBER: ${{ steps.build_package_step.outputs.build_number }}
       COMMIT_SHA: ${{ steps.commit_sha_step.outputs.commit_sha }}
