name: Master Branch Push Create Release

on:
  push:
    branches:
      - master

jobs:
  MasterPushCreateRelease:

    runs-on: ubuntu-latest
    env: 
      MAJOR_VERSION: 0
      MINOR_VERSION: 0
      PATCH_VERSION: 0

    steps:

    - name: Run the actions/checkout lib v1
      uses: actions/checkout@v1

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    
    # TODO: Set version of minSdk, targetSdk, compileSdk here also? Override them preferrably so devs can still do local builds.
    - name: Get application version
      run: echo "::set-env name=MAJOR_VERSION::$(cat build.gradle | grep 'majorVersion = ' | awk '{print $3}')" &&
        echo "::set-env name=MINOR_VERSION::$(cat build.gradle | grep 'minorVersion = ' | awk '{print $3}')" &&
        echo "::set-env name=PATCH_VERSION::$(cat build.gradle | grep 'patchVersion = ' | awk '{print $3}')"
        
    - name: Set gradle version
      run: chmod +x gradlew && ./gradlew wrapper --gradle-version=6.0

    - name: Check gradle version
      run: ./gradlew --version

    - name: Build the Release
      run: ./gradlew assembleRelease

    - name: Run Unit Tests on Release
      run: ./gradlew testReleaseUnitTest

    - name: Upload the binaries to the Actions Artifacts
      uses: actions/upload-artifact@master
      with:
        name: WN-SDK_version # TODO: Capture version number, place in name of artifact. Will be able to use version for package creation also.
        path: sdk/build/outputs/aar
    
    - name: Releasing using Hub
      uses: realwear/action-release-apk@master
      env:
       GITHUB_TOKEN: ${{ secrets.TOKEN }}
       APP_FOLDER: sdk
       RELEASE_TITLE: WN-SDK-v${{ MAJOR_VERSION }}.${{ MINOR_VERSION }}.${{ PATCH_VERSION }}

    # TODO: Create the release first, but prior to that need to solve the version problem.

    # TODO: Fix, this will not work because a tag needs to be created first.
#     - name: Publish the binaries to the Release
#       uses: skx/github-action-publish-binaries@master
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       with:
#         args: 'WN-SDK_version'
