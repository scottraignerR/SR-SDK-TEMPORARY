name: Branch Build Test Lint

on:
  push:
    branches-ignore:
      - master
      - integration

# TODO: How do we get branch names into here?
# TODO: How to we get the version of the build in here?

jobs:
  BranchBuildAndTest:

    runs-on: ubuntu-latest

    steps:

    - name: Run the actions/checkout lib v1
      uses: actions/checkout@v1

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        
    # TODO: Set version of minSdk, targetSdk, compileSdk here also? Override them preferrably so devs can do local build still.
    - name: Get application version
#       env:
#         majorVersion: ${{ grep 'majorVersion = ' build.gradle | awk '{print $3}' }}
#         minorVersion: ${{ grep 'minorVersion = ' build.gradle | awk '{print $3}' }}
#         patchVersion: ${{ grep 'patchVersion = ' build.gradle | awk '{print $3}' }}
#         cat $(cat DOCKERFILE_NAME) | grep DOCKERHUB_USER= | head -n 1 | grep -o '".*"' | sed 's/"//g' > DOCKERHUB_USER
#         echo "::set-env name=patchVersion::$(cat build.gradle | grep 'minorVersion = ' | awk '{print $3}')"
#         GITHUB_CONTEXT: ${{ toJson(github) }}

      run: pwd 
        ls -al
        cat build.gradle | grep 'patchVersion = ' | awk '{print $3}'
#         echo "::set-env name=patchVersion::$(cat build.gradle | grep 'patchVersion = ' | awk '{print $3}')"
#         echo $patchVersion
              
    - name: Set gradle version to 6.0
      run: chmod +x gradlew && ./gradlew wrapper --gradle-version=6.0
      
    - name: Check gradle version
      run: ./gradlew --version

    - name: Build the Debug
      run: ./gradlew assembleDebug

    - name: Build the Release
      run: ./gradlew assembleRelease
    
    - name: Run Unit Tests on Debug
      run: ./gradlew testDebugUnitTest

    - name: Run Unit Tests on Release
      run: ./gradlew testReleaseUnitTest
      
    - name: Check directory
      run: pwd && cd sdk/build/outputs/aar/ && ls -l
    
    - name: Upload artifact
      uses: actions/upload-artifact@master
      with:
        name: WN-SDK_version # TODO: Capture version number, place in name of artifact. Will be able to use version for package creation also.
        path: sdk/build/outputs/aar

  BranchLint:

    runs-on: ubuntu-latest
    
    steps:
    
    - name: Run the actions/checkout lib v1
      uses: actions/checkout@v1

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Set gradle version
      run: chmod +x gradlew && ./gradlew wrapper --gradle-version=6.0

    - name: Check gradle version
      run: ./gradlew --version
      
    - name: Run lint
      run: ./gradlew lint
